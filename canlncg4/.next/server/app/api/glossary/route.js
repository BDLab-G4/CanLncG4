"use strict";(()=>{var e={};e.id=301,e.ids=[301],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},34281:(e,r,a)=>{a.r(r),a.d(r,{headerHooks:()=>S,originalPathname:()=>m,requestAsyncStorage:()=>i,routeModule:()=>u,serverHooks:()=>d,staticGenerationAsyncStorage:()=>l,staticGenerationBailout:()=>g});var s={};a.r(s),a.d(s,{GET:()=>p}),a(95655);var n=a(83323),t=a(54647),o=a(4615);let p=async(e,r)=>{try{let e=await (0,o.$)(),r={cancers:[],lncRNAs:[]},a=await e.query("SELECT DISTINCT cancer_name FROM lnc_rna"),s=await e.query("SELECT DISTINCT lncrna_name FROM lnc_rna");return await (0,o.z)(e),a.rows.map(e=>r.cancers.push(e.cancer_name)),s.rows.map(e=>r.lncRNAs.push(e.lncrna_name)),Response.json(r,{status:200})}catch(e){return console.log(e),Response.json({message:"internal server error"},{status:500})}},c=n.AppRouteRouteModule,u=new c({definition:{kind:t.x.APP_ROUTE,page:"/api/glossary/route",pathname:"/api/glossary",filename:"route",bundlePath:"app/api/glossary/route"},resolvedPagePath:"C:\\DATA\\Code\\IITGN\\CanlncG4\\canlncg4\\app\\api\\glossary\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:i,staticGenerationAsyncStorage:l,serverHooks:d,headerHooks:S,staticGenerationBailout:g}=u,m="/api/glossary/route"},4615:(e,r,a)=>{a.d(r,{$:()=>n,z:()=>t});let s=require("pg"),n=async()=>{let e=new s.Pool({user:process.env.PGSQL_USER,password:process.env.PGSQL_PASSWORD,host:process.env.PGSQL_HOST,port:parseInt(process.env.PGSQL_PORT),database:process.env.PGSQL_DATABASE});return e},t=async e=>{await e.end()}}};var r=require("../../../webpack-runtime.js");r.C(e);var a=e=>r(r.s=e),s=r.X(0,[405],()=>a(34281));module.exports=s})();