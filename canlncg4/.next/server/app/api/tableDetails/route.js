"use strict";(()=>{var e={};e.id=946,e.ids=[946],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},72864:(e,a,s)=>{s.r(a),s.d(a,{headerHooks:()=>m,originalPathname:()=>v,requestAsyncStorage:()=>u,routeModule:()=>p,serverHooks:()=>d,staticGenerationAsyncStorage:()=>c,staticGenerationBailout:()=>g});var r={};s.r(r),s.d(r,{GET:()=>i}),s(95655);var t=s(83323),n=s(54647),o=s(4615);let i=async(e,a)=>{let s=new URL(e.url),r=s.searchParams.get("type"),t=s.searchParams.get("payload");if(!r||"string"!=typeof r||!t||"string"!=typeof t)return Response.json({message:"invalid query params"},{status:400});try{let e;let a=await (0,o.$)(),s=await a.query("SELECT * FROM lnc_rna");if("lncrna_name"===r)e=s.rows.filter(e=>e.lncrna_name===t);else if("cancer_name"===r)e=s.rows.filter(e=>e.cancer_name.toLowerCase()===t);else{if("lncrna_alias"!==r)return await (0,o.z)(a),Response.json({message:"invalid query params"},{status:400});e=s.rows.filter(e=>e.aliases.includes(t))}return await (0,o.z)(a),Response.json(e,{status:200})}catch(e){return console.log(e),Response.json({message:"internal server error"},{status:500})}},l=t.AppRouteRouteModule,p=new l({definition:{kind:n.x.APP_ROUTE,page:"/api/tableDetails/route",pathname:"/api/tableDetails",filename:"route",bundlePath:"app/api/tableDetails/route"},resolvedPagePath:"C:\\DATA\\Code\\IITGN\\CanlncG4\\canlncg4\\app\\api\\tableDetails\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:u,staticGenerationAsyncStorage:c,serverHooks:d,headerHooks:m,staticGenerationBailout:g}=p,v="/api/tableDetails/route"},4615:(e,a,s)=>{s.d(a,{$:()=>t,z:()=>n});let r=require("pg"),t=async()=>{let e=new r.Pool({user:process.env.PGSQL_USER,password:process.env.PGSQL_PASSWORD,host:process.env.PGSQL_HOST,port:parseInt(process.env.PGSQL_PORT),database:process.env.PGSQL_DATABASE});return e},n=async e=>{await e.end()}}};var a=require("../../../webpack-runtime.js");a.C(e);var s=e=>a(a.s=e),r=a.X(0,[405],()=>s(72864));module.exports=r})();